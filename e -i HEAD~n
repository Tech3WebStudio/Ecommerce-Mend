[33mcommit 4b11cb9359243fcd099690fdb3078b57cce88f06[m[33m ([m[1;36mHEAD -> [m[1;32mdev[m[33m)[m
Author: niveyrojulian <niveyrojulian5@gmail.com>
Date:   Fri Jul 26 02:24:11 2024 -0300

    todo listo para el deploy

[1mdiff --git a/client/src/redux/actions/actions.js b/client/src/redux/actions/actions.js[m
[1mindex 2bc26b3..591a522 100644[m
[1m--- a/client/src/redux/actions/actions.js[m
[1m+++ b/client/src/redux/actions/actions.js[m
[36m@@ -61,8 +61,13 @@[m [mexport const uploadImages = (formData) => async (dispatch) => {[m
 };[m
 [m
 export const fetchSheets = () => async (dispatch) => {[m
[32m+[m[32m  const token = localStorage.getItem("authToken");[m
   try {[m
[31m-    const res = await axios.get(`${rutaBack}/api/sheets/data`);[m
[32m+[m[32m    const res = await axios.get(`${rutaBack}/api/sheets/data`, {[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        "Authorization": `Bearer ${token}`,[m
[32m+[m[32m      },[m
[32m+[m[32m    });[m
     dispatch({[m
       type: FETCH_SHEETS,[m
       payload: res.data,[m
[36m@@ -73,8 +78,13 @@[m [mexport const fetchSheets = () => async (dispatch) => {[m
 };[m
 [m
 export const addSheetRow = (rowData) => async (dispatch) => {[m
[32m+[m[32m  const token = localStorage.getItem("authToken");[m
   try {[m
[31m-    const res = await axios.post(`${rutaBack}/api/sheets/data`, rowData);[m
[32m+[m[32m    const res = await axios.post(`${rutaBack}/api/sheets/data`, rowData, {[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        "Authorization": `Bearer ${token}`,[m
[32m+[m[32m      },[m
[32m+[m[32m    });[m
     if (res.status === 200) {[m
       toast.success("Creado exitosamente");[m
       dispatch({[m
[36m@@ -88,12 +98,16 @@[m [mexport const addSheetRow = (rowData) => async (dispatch) => {[m
 };[m
 [m
 export const updateRow = (rowData) => async (dispatch) => {[m
[32m+[m[32m  const token = localStorage.getItem("authToken");[m
   try {[m
[31m-    const res = await axios.put(`${rutaBack}/api/sheets/update`, rowData);[m
[32m+[m[32m    const res = await axios.put(`${rutaBack}/api/sheets/update`, rowData, {[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        "Authorization": `Bearer ${token}`,[m
[32m+[m[32m      },[m
[32m+[m[32m    });[m
 [m
     if (res.status === 200) {[m
       toast.success("Editado exitosamente");[m
[31m-[m
       dispatch({[m
         type: UPDATE_SHEET_ROW,[m
         payload: res.data,[m
[36m@@ -105,8 +119,13 @@[m [mexport const updateRow = (rowData) => async (dispatch) => {[m
 };[m
 [m
 export const deleteSheetRow = (rowIndex) => async (dispatch) => {[m
[32m+[m[32m  const token = localStorage.getItem("authToken");[m
   try {[m
[31m-    const res = await axios.delete(`${rutaBack}/api/sheets/delete/${rowIndex}`);[m
[32m+[m[32m    const res = await axios.delete(`${rutaBack}/api/sheets/delete/${rowIndex}`, {[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        "Authorization": `Bearer ${token}`,[m
[32m+[m[32m      },[m
[32m+[m[32m    });[m
 [m
     if (res.status === 200) {[m
       toast.success("Eliminado exitosamente");[m
[36m@@ -118,4 +137,4 @@[m [mexport const deleteSheetRow = (rowIndex) => async (dispatch) => {[m
   } catch (error) {[m
     console.log(error);[m
   }[m
[31m-};[m
[32m+[m[32m};[m

 require('dotenv').config();[m
[31m-const fs = require("fs").promises;[m
[31m-const path = require("path");[m
 const { google } = require("googleapis");[m
[31m-const { authenticate } = require("@google-cloud/local-auth");[m
 [m
[31m-const SCOPES = ["https://www.googleapis.com/auth/spreadsheets"];[m
[31m-const TOKEN_PATH = path.join(process.cwd(), "token.json");[m
[31m-const CREDENTIALS_PATH = path.join(process.cwd(), "credentials.json");[m
 [m
[31m-async function loadSavedCredentialsIfExist() {[m
[32m+[m[32masync function authorize() {[m
   try {[m
[31m-    const content = await fs.readFile(TOKEN_PATH);[m
[31m-    const credentials = JSON.parse(content);[m
[31m-    return google.auth.fromJSON(credentials);[m
[31m-  } catch (err) {[m
[31m-    console.log(err);[m
[31m-    return null;[m
[31m-  }[m
[31m-}[m
[32m+[m[32m    const oauth2Client = new google.auth.OAuth2([m
[32m+[m[32m      process.env.GOOGLE_CLIENT_ID,[m
[32m+[m[32m      process.env.GOOGLE_CLIENT_SECRET,[m
[32m+[m[32m      process.env.GOOGLE_REDIRECT_URIS // Agrega esta variable a tu .env[m
[32m+[m[32m    );[m
 [m
[31m-async function saveCredentials(client) {[m
[31m-  const payload = JSON.stringify({[m
[31m-    type: "authorized_user",[m
[31m-    client_id: process.env.GOOGLE_CLIENT_ID,[m
[31m-    client_secret: process.env.GOOGLE_CLIENT_SECRET,[m
[31m-    refresh_token: client.credentials.refresh_token,[m
[31m-  });[m
[31m-  await fs.writeFile(TOKEN_PATH, payload);[m
[31m-}[m
[32m+[m[32m    oauth2Client.setCredentials({[m
[32m+[m[32m      refresh_token: process.env.GOOGLE_REFRESH_TOKEN,[m
[32m+[m[32m    });[m
 [m
[31m-async function authorize() {[m
[31m-  let client = await loadSavedCredentialsIfExist();[m
[31m-  if (client) {[m
[31m-    return client;[m
[31m-  }[m
[31m-  client = await authenticate({[m
[31m-    scopes: SCOPES,[m
[31m-    keyfilePath: CREDENTIALS_PATH,[m
[31m-  });[m
[31m-  if (client.credentials) {[m
[31m-    await saveCredentials(client);[m
[32m+[m[32m    // Obtener un nuevo token de acceso[m
[32m+[m[32m    const { token } = await oauth2Client.getAccessToken();[m
[32m+[m[32m    oauth2Client.setCredentials({ access_token: token });[m
[32m+[m
[32m+[m[32m    return oauth2Client;[m
[32m+[m[32m  } catch (err) {[m
[32m+[m[32m    console.error('Error en la autorizaci√≥n:', err);[m
[32m+[m[32m    throw err;[m
   }[m
[31m-  return client;[m
 }[m
 [m
 async function getSheetData(auth) {[m
[1mdiff --git a/server/src/Middleware/authMiddleware.js b/server/src/Middleware/authMiddleware.js[m
[1mindex 8520525..54c6ae9 100644[m
[1m--- a/server/src/Middleware/authMiddleware.js[m
[1m+++ b/server/src/Middleware/authMiddleware.js[m
[36m@@ -18,6 +18,30 @@[m [madmin.initializeApp({[m
   credential: admin.credential.cert(serviceAccount),[m
 });[m
 [m
[32m+[m[32masync function authenticateToken(req, res, next) {[m
[32m+[m[32m  const authHeader = req.headers.authorization;[m
[32m+[m[32m  if (!authHeader) {[m
[32m+[m[32m    return res.status(401).send("Authorization header missing");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32